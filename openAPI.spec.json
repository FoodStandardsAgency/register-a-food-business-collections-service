{
  "swagger": "2.0",
  "info": {
      "title": "Register a food business collections",
      "version": "1.0"
  },
  "host": "fsa-rof-gateway.azure-api.net",
  "basePath": "/api/registrations",
  "schemes": [
      "https"
  ],
  "securityDefinitions": {
      "apiKeyHeader": {
          "type": "apiKey",
          "name": "Ocp-Apim-Subscription-Key",
          "in": "header"
      },
      "apiKeyQuery": {
          "type": "apiKey",
          "name": "subscription-key",
          "in": "query"
      }
  },
  "security": [
      {
          "apiKeyHeader": []
      },
      {
          "apiKeyQuery": []
      }
  ],
  "paths": {
      "/{lc}": {
          "get": {
              "description": "Returns all registrations for the given council.",
              "operationId": "collect-all-registrations-for-council",
              "summary": "Collect ALL registrations for council",
              "parameters": [
                  {
                      "name": "lc",
                      "in": "path",
                      "description": "The council name",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fields",
                      "in": "query",
                      "description": "Extra fields to return as part of the response",
                      "type": "array",
                      "items": {
                          "type": "string"
                      }
                  },
                  {
                    "name": "new",
                    "in": "query",
                    "description": "Flag to return only new registrations",
                    "type": "boolean",
                    "enum": [
                        "true",
                        "false"
                    ]
                  },
                  {
                    "name": "double-mode",
                    "in": "header",
                    "description": "Optional string to run the applcation against an in memory double rather than the real DB",
                    "type": "string",
                    "enum": [
                        "success",
                        "fail",
                        "single",
                        "update"
                    ]
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/ArrayOfRegistrations"
                      }
                  },
                  "400": {
                    "description": "Bad request, invalid options"
                  },
                  "404": {
                    "description": "Resource not found"
                  },
                  "500": {
                    "description": "Internal server error"
                  }
              }
          }
      },
      "/{lc}/{fsa_rn}": {
          "get": {
              "description": "Get a single registrations in full",
              "parameters": [
                  {
                      "name": "lc",
                      "in": "path",
                      "description": "The council name",
                      "required": true,
                      "type": "string"
                  },
                  {
                    "name": "fsa_rn",
                    "in": "path",
                    "description": "The reference number for the registration to be retrieved",
                    "required": true,
                    "type": "string"
                    },
                {
                    "name": "double-mode",
                    "in": "header",
                    "description": "Optional string to run the applcation against an in memory double rather than the real DB",
                    "type": "string",
                    "enum": [
                        "success",
                        "fail",
                        "single",
                        "update"
                    ]
                }
              ],
              "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/Registration"
                    }
                },
                "400": {
                  "description": "Bad request, invalid options"
                },
                "404": {
                  "description": "Resource not found"
                },
                "500": {
                  "description": "Internal server error"
                }
            }
          },
          "put":  {
            "description": "Update a single registrations with collected",
            "parameters": [
                {
                    "name": "lc",
                    "in": "path",
                    "description": "The council name",
                    "required": true,
                    "type": "string"
                },
                {
                  "name": "fsa_rn",
                  "in": "path",
                  "description": "The reference number for the registration to be retrieved",
                  "required": true,
                  "type": "string"
                  },
              {
                  "name": "double-mode",
                  "in": "header",
                  "description": "Optional string to run the applcation against an in memory double rather than the real DB",
                  "type": "string",
                  "enum": [
                      "success",
                      "fail",
                      "single",
                      "update"
                  ]
              },
              {
                "name": "collected",
                "in": "body",
                "description": "The flag to mark the registration with",
                "schema": {
                    "type": "object",
                    "properties": {
                        "collected": {
                            "type": "boolean"
                        }
                    }
                }                
            }
            ],
            "responses": {
              "200": {
                  "description": "OK",
                  "schema": {
                      "type": "object",
                      "properties": {
                          "fsa_rn": {
                             "type": "string"
                          },
                          "collected": {
                            "type": "boolean"
                         }
                      }
                  }
              },
              "400": {
                "description": "Bad request, invalid options"
              },
              "404": {
                "description": "Resource not found"
              },
              "500": {
                "description": "Internal server error"
              }
          }
        }
      }
  },
  "definitions": {
      "ArrayOfRegistrations": {
          "type": "array",
          "items": {
              "$ref": "#/definitions/Registration"
          }
      },
      "Registration": {
          "type": "object",
          "properties": {
              "establishment": {
                  "$ref": "#/definitions/Establishment"
              },
              "metadata": {
                  "$ref": "#/definitions/Metadata"
              }
          }
      },
      "Establishment": {
          "type": "object",
          "properties": {
              "establishment_details": {
                  "$ref": "#/definitions/EstablishmentDetails"
              },
              "operator": {
                  "$ref": "#/definitions/Operator"
              },
              "premise": {
                  "$ref": "#/definitions/Premise"
              },
              "activities": {
                  "$ref": "#/definitions/Activities"
              }
          }
      },
      "EstablishmentDetails": {
          "type": "object",
          "properties": {
              "establishment_trading_name": {
                  "type": "string"
              },
              "establishment_primary_number": {
                  "type": "string"
              },
              "establishment_secondary_number": {
                  "type": "string"
              },
              "establishment_email": {
                  "type": "string"
              },
              "establishment_opening_date": {
                  "type": "string"
              }
          }
      },
      "Operator": {
          "type": "object",
          "properties": {
              "operator_first_name": {
                  "type": "string"
              },
              "operator_last_name": {
                  "type": "string"
              },
              "operator_postcode": {
                  "type": "string"
              },
              "operator_first_line": {
                  "type": "string"
              },
              "operator_street": {
                  "type": "string"
              },
              "operator_town": {
                  "type": "string"
              },
              "operator_primary_number": {
                  "type": "string"
              },
              "operator_secondary_number": {
                  "type": "string"
              },
              "operator_email": {
                  "type": "string"
              },
              "contact_representative_number": {
                  "type": "string"
              },
              "contact_representative_email": {
                  "type": "string"
              },
              "operator_type": {
                  "type": "string"
              },
              "operator_company_name": {
                  "type": "string"
              },
              "operator_company_house_number": {
                  "type": "string"
              },
              "operator_charity_name": {
                  "type": "string"
              },
              "operator_charity_number": {
                  "type": "string"
              }
          }
      },
      "Premise": {
          "type": "object",
          "properties": {
              "establishment_postcode": {
                  "type": "string"
              },
              "establishment_first_line": {
                  "type": "string"
              },
              "establishment_street": {
                  "type": "string"
              },
              "establishment_town": {
                  "type": "string"
              },
              "establishment_type": {
                  "type": "string"
              }
          }
      },
      "Activities": {
          "type": "object",
          "properties": {
              "customer_type": {
                  "type": "string"
              },
              "business_type": {
                  "type": "string"
              },
              "business_type_search_term": {
                  "type": "string"
              },
              "import_export_activities": {
                  "type": "string"
              },
              "business_other_details": {
                  "type": "string"
              },
              "opening_days_irregular": {
                  "type": "string"
              },
              "opening_day_monday": {
                  "type": "boolean"
              },
              "opening_day_tuesday": {
                  "type": "boolean"
              },
              "opening_day_wednesday": {
                  "type": "boolean"
              },
              "opening_day_thursday": {
                  "type": "boolean"
              },
              "opening_day_friday": {
                  "type": "boolean"
              },
              "opening_day_saturday": {
                  "type": "boolean"
              },
              "opening_day_sunday": {
                  "type": "boolean"
              }
          }
      },
      "Metadata": {
          "type": "object",
          "properties": {
              "declaration1": {
                  "type": "string"
              },
              "declaration2": {
                  "type": "string"
              },
              "declaration3": {
                  "type": "string"
              }
          }
      }
  },
  "tags": []
}