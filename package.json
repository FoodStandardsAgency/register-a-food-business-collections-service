{
  "name": "register-a-food-business-collections-service",
  "version": "9.5.0",
  "description": "",
  "main": "src/app.js",
  "engines": {
    "node": ">=12.9"
  },
  "scripts": {
    "start": "node src/app.js",
    "local:start": "export $(grep -v '^#' .env | xargs -d '\n') && nodemon src/app.js",
    "local:start:docker": "export NODE_ENV=local && node src/db/check-connection.js && nodemon src/app.js",
    "local:debug": "export $(grep -v '^#' .env | xargs -d '\n') && nodemon --inspect src/app.js",
    "local:migrate": "export NODE_ENV=local && sequelize db:migrate",
    "test": "jest ./src --coverage",
    "test:raw": "export TEST_TYPE=unit && jest ",
    "test:unit:ci": "export TEST_TYPE=unit && jest ./src --coverage --runInBand",
    "test:component": "npm run reset-postgres && jest ./tests/component/*.js --runInBand",
    "test:component:ci": "export TEST_TYPE=component && jest ./tests/component/*.js --runInBand",
    "test:integration": "jest ./tests/integration/*.js",
    "test:integration:ci": "export TEST_TYPE=integration && jest ./tests/integration/*.js --runInBand",
    "test:contract": "npm run reset-postgres && jest ./tests/contract/*.js",
    "test:contract:ci": "export TEST_TYPE=contract && npm run reset-postgres && jest ./tests/contract/*.js --runInBand",
    "test:api:e2e": "jest ./tests/e2e/*.js --runInBand",
    "lint": "eslint ./src",
    "lint:fix": "eslint --fix ./src ",
    "format:verify": "prettier --list-different '{src,tests}/**/*.js'",
    "format": "prettier --write '{src,tests}/**/*.js'",
    "migrate": "sequelize db:migrate",
    "seed-postgres": "node tests/postgres-seed/postgres-seed.js",
    "clear-postgres": "node tests/postgres-seed/postgres-clear.js",
    "reset-postgres": "npm run clear-postgres && npm run seed-postgres"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/FoodStandardsAgency/register-a-food-business-collections-service.git"
  },
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/FoodStandardsAgency/register-a-food-business-collections-service/issues"
  },
  "homepage": "https://github.com/FoodStandardsAgency/register-a-food-business-collections-service#readme",
  "dependencies": {
    "applicationinsights": "^1.7.6",
    "applicationinsights-native-metrics": "0.0.5",
    "body-parser": "^1.19.0",
    "cls-hooked": "^4.2.2",
    "express": "^4.17.1",
    "helmet": "^3.23.1",
    "lodash": "^4.17.19",
    "lodash.flatten": "^4.4.0",
    "mongodb": "^3.5.9",
    "morgan": "^1.10.0",
    "nodemon": "^2.0.4",
    "path": "^0.12.7",
    "pg": "^8.2.1",
    "request": "^2.88.2",
    "request-promise-native": "^1.0.8",
    "sequelize": "^5.21.13",
    "swagger-ui-express": "^4.1.4",
    "typescript": "^3.9.5",
    "uuid": "^8.1.0",
    "validator": "^13.1.1",
    "winston": "^3.2.1",
    "winston-azure-application-insights": "^2.0.0",
    "winston-elasticsearch": "^0.9.0",
    "yargs": "^15.3.1"
  },
  "devDependencies": {
    "dotenv": "^8.2.0",
    "eslint": "^5.16.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-jest": "^23.13.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^2.6.1",
    "jest": "24.8.0",
    "jest-junit": "7.0.0",
    "prettier": "^2.0.5"
  },
  "prettier": {
    "trailingComma": "none",
    "tabWidth": 2,
    "semi": true
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "plugin:node/recommended"
    ],
    "env": {
      "jest/globals": true
    },
    "plugins": [
      "jest"
    ],
    "parserOptions": {
      "ecmaVersion": 2019
    },
    "rules": {
      "jest/no-disabled-tests": "warn",
      "jest/no-focused-tests": "error",
      "jest/no-identical-title": "error",
      "jest/prefer-to-have-length": "warn",
      "jest/valid-expect": "error",
      "node/exports-style": [
        "error",
        "module.exports"
      ],
      "node/file-extension-in-import": [
        "error",
        "always"
      ],
      "node/prefer-global/buffer": [
        "error",
        "always"
      ],
      "node/prefer-global/console": [
        "error",
        "always"
      ],
      "node/prefer-global/process": [
        "error",
        "always"
      ],
      "node/prefer-global/url-search-params": [
        "error",
        "always"
      ],
      "node/prefer-global/url": [
        "error",
        "always"
      ],
      "node/prefer-promises/dns": "error",
      "node/prefer-promises/fs": "error"
    }
  },
  "nodemonConfig": {
    "verbose": true,
    "ignore": [
      "node_modules",
      "tests",
      "scripts",
      "docs"
    ],
    "watch": [
      "src"
    ],
    "ext": "js json"
  }
}
